import { test } from '@playwright/test';
import { locators } from '../const/locators';
import { config } from '../const/config';
import { utils } from '../utils/utils';

test.beforeEach(async ({ page }) => {
  await page.goto(config.baseURL);
  await page.locator(locators.checkpointLoaded).waitFor();
  await page.locator(locators.vaeLoaded).waitFor();
});
test.afterEach(async ({ page }) => {
  await page.pause();
});

test('Execute t2i once', async ({ page }) => {
  await utils.inputPrompt(page, 't2i', config.t2i.prompt, config.t2i.negative);
  await utils.parameterSetting(page, 't2i', config.t2i.params);
  await utils.generateImg(page, 't2i');
});

test('Execute t2i hiresFix once', async ({ page }) => {
  await utils.inputPrompt(page, 't2i', config.t2i.prompt, config.t2i.negative);
  await utils.parameterSetting(page, 't2i', config.t2i.params);
  await utils.hiresFixSetting(page, 't2i', config.t2i.hiresFix);
  await utils.generateImg(page, 't2i');
});

test('Execute t2i multiple times', async ({ page }) => {
  const roopNum = 3;
  await utils.inputPrompt(page, 't2i', config.t2i.prompt, config.t2i.negative);
  await utils.parameterSetting(page, 't2i', config.t2i.params);

  for (let i = 0; i < roopNum; i++) {
    await utils.generateImg(page, 't2i');
  }
});
test('Execute i2i on all images generated by t2i', async ({ page }) => {
  await utils.inputPrompt(page, 't2i', config.t2i.prompt, config.t2i.negative);
  await utils.parameterSetting(page, 't2i', config.t2i.params);
  await utils.generateImg(page, 't2i');
  //Click on gallery to view thumbnails
  await page.locator(locators.t2i.txt2imgGallery).click();
  const txt2imgGalleryThumb = page.locator(locators.t2i.txt2imgGalleryThumb);

  for (let i = 1; i < config.outputsT2iImg() + 1; i++) {
    await txt2imgGalleryThumb.locator(`//button[${i + 1}]`).click();
    await page.locator(locators.t2i.sendToI2iBtn).click();
    //Parameter Setting
    await utils.sizeSetting(page, 'i2i', config.i2i.params.width, config.i2i.params.height);
    await utils.cfgScaleSetting(page, 'i2i', config.i2i.params.cfgScale);
    await utils.strengthSetting(page, config.i2i.params.strength);
    await utils.seedSetting(page, 'i2i', -1);
    await utils.generateImg(page, 'i2i');
    // Back to tab t2i
    await page.locator(locators.tabs.t2i).click();
  }
});
